# K8S resources definition for entire deploy for Prometheus, Grafana and Storage API.
# All in same yaml file for easier review.
# This file have been tested succesfully in a Minikube local environment
# Minikube version: v1.23.1
# Kubernetes v1.22.1 on Docker 20.10.8

# PVC for Grafana and Prometheus
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi

# Prometheus service
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
spec:
  selector:
    app: prometheus
  ports:
    - protocol: TCP
      port: 9090
      targetPort: 9090

# Prometheus deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:v2.33.0
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-storage
              mountPath: /prometheus
            - name: prometheus-config
              mountPath: /etc/prometheus
      volumes:
        - name: prometheus-storage
          persistentVolumeClaim:
            claimName: prometheus-pvc
        - name: prometheus-config
          configMap:
            name: prometheus-config

# Prometheus configmap to configure app and scrapes            
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
data:
  prometheus.yml: | # scrape target here is "storage-api" as it is the storage-api service name/dns for this app running in K8S
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    scrape_configs:
      - job_name: "storage_api"
        scrape_interval: 10s
        static_configs:
          - targets: ["storage-api:5000"]

# Storage API service
---
apiVersion: v1
kind: Service
metadata:
  name: storage-api
spec:
  selector:
    app: storage-api
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000

# Storage API deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: storage-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: storage-api
  template:
    metadata:
      labels:
        app: storage-api
    spec:
      containers:
        - name: storage-api
          image: storage-api:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5000
          env:
            - name: PORT
              value: "5000"

# Grafana service              
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
spec:
  selector:
    app: grafana
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000

# Grafana deployment      
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana-oss:8.3.4
          ports:
            - containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: "admin"
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: "admin"
            - name: GF_USERS_ALLOW_SIGN_UP
              value: "false"
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: grafana-datasources 
              mountPath: /etc/grafana/provisioning/datasources
            - name: grafana-dashboards
              mountPath: /etc/grafana/provisioning/dashboards
              readOnly: false
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-pvc
        - name: grafana-datasources
          configMap:
            name: grafana-datasources # mounted from configMap to configure Prometheus datasource
        - name: grafana-dashboards
          configMap:
            name: grafana-dashboards # mounted from configMap to deploy http_metrics dashboard

# Grafana configmap for Prometheus datasource config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
data:
  datasource.yaml: |
    apiVersion: 1

    deleteDatasources:
      - name: Prometheus
        orgId: 1

    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        orgId: 1
        url: http://prometheus:9090
        password:
        user:
        database:
        basicAuth: true
        basicAuthUser: admin
        basicAuthPassword: foobar
        withCredentials:
        isDefault: true
        jsonData:
          graphiteVersion: "1.1"
          tlsAuth: false
          tlsAuthWithCACert: false
        secureJsonData:
          tlsCACert:
          tlsClientCert:
          tlsClientKey:
        version: 1
        editable: true

# Grafana configmap for Grafana http_requests dashboard deploy
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
data:
  http_requests.yml: |
    apiVersion: 1

    providers:
    - name: 'challenge'
      orgId: 1
      folder: 'challenge'
      type: 'file'
      updateIntervalSeconds: 30
      options:
        path: /etc/grafana/provisioning/dashboards

  http_requests.json: |
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "target": {
              "limit": 100,
              "matchAny": false,
              "tags": [],
              "type": "dashboard"
            },
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "fiscalYearStartMonth": 0,
      "graphTooltip": 0,
      "links": [],
      "liveNow": false,
      "panels": [
        {
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "Duration (µs)",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 2,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "µs"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 0,
            "y": 0
          },
          "id": 1,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom"
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "pluginVersion": "8.3.4",
          "targets": [
            {
              "datasource": {
                "type": "prometheus"
              },
              "exemplar": true,
              "expr": "avg(rate(http_request_duration_sum[1m]) / rate(http_request_duration_count[1m]))",
              "interval": "",
              "legendFormat": "Average Request Duration",
              "refId": "A"
            }
          ],
          "title": "Average HTTP Request Duration",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisLabel": "Requests",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 2,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": true,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 0,
            "y": 9
          },
          "id": 2,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom"
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "pluginVersion": "8.3.4",
          "targets": [
            {
              "expr": "sum(rate(http_requests_total{status=\"200\"}[1m]))",
              "legendFormat": "200",
              "refId": "A"
            },
            {
              "expr": "sum(rate(http_requests_total{status=\"404\"}[1m]))",
              "legendFormat": "404",
              "refId": "B"
            },
            {
              "expr": "sum(rate(http_requests_total{status=\"500\"}[1m]))",
              "legendFormat": "500",
              "refId": "C"
            }
          ],
          "title": "HTTP Status Codes",
          "type": "timeseries"
        }
      ],
      "refresh": "5s",
      "schemaVersion": 34,
      "style": "dark",
      "tags": [],
      "templating": {
        "list": []
      },
      "time": {
        "from": "now-5m",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "",
      "title": "HTTP Request Metrics Dashboard",
      "uid": "sMyHCy6Sz",
      "version": 1,
      "weekStart": ""
    }